# -*- coding: utf-8 -*-
"""MLops_major.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BU9lvzKAfVR96rtVS-xN2CPld_KPRqRi
"""

# import libraries and iris data set
import numpy as np
import pandas as pd
from sklearn.datasets import load_iris
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df.head()

from sklearn.model_selection import train_test_split

from sklearn.preprocessing import StandardScaler

class IrisDataProcessor:
  def __init__(self):
    iris = load_iris()
    self.df = pd.DataFrame(iris.data, columns=iris.feature_names)
    self.X = iris.data
    self.y = iris.target
  def prepare_data(self):
    scaler = StandardScaler()
    self.X = scaler.fit_transform(self.X)

  def get_feature_stats(self):
    return self.X.mean(axis=0), self.X.std(axis=0)

iris_data = IrisDataProcessor()
iris_data.prepare_data()

from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

class IrisExperiment:
  def __init__(self, data_processor, model):
    self.data_processor = data_processor
    self.data_processor.prepare_data()
    self.X_train, self.X_test, self.y_train, self.y_test = train_test_split(self.data_processor.X, self.data_processor.y, test_size=0.2, random_state=42)
    self.model = model
    self.y_pred = None
  def run_experiment(self):
    self.model.fit(self.X_train, self.y_train)
    self.y_pred = self.model.predict(self.X_test)

  def log_results(self):
    accuracy = accuracy_score(self.y_test, self.y_pred)
    precision = precision_score(self.y_test, self.y_pred, average='weighted')
    recall = recall_score(self.y_test, self.y_pred, average='weighted')
    print(f'Accuracy: {accuracy}')
    print(f'Precision: {precision}')
    print(f'Recall: {recall}')

lr = LogisticRegression()
rf = RandomForestClassifier()
lr_exp = IrisExperiment(IrisDataProcessor(), lr)
rf_exp = IrisExperiment(IrisDataProcessor(), rf)

lr_exp.run_experiment()
lr_exp.log_results()

rf_exp.run_experiment()
rf_exp.log_results()

